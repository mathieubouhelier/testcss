{"version":3,"sources":["services/blogService.js","store/ducks/blog.js","components/blogCard/BlogCard.jsx","components/Loading/Loading.jsx","components/Header/Header.jsx","components/SeoHelmet/SeoHelmet.jsx","pages/Home/index.js","pages/Post/index.js","components/NotFound/NotFound.jsx","App.js","reportWebVitals.js","store/ducks/rootReducers.js","store/index.js","index.js"],"names":["this","http","axios","create","baseURL","timeout","interceptors","response","use","handleSuccess","handleError","error","page","get","slug","Types","initialState","isFetching","blogs","totalPages","post","errors","salesFetching","status","type","payload","getAllBlogs","dispatch","BlogService","getBlogsByPage","then","additionalPageFetched","data","catch","hasErrored","getOnePost","getPostBySlug","blogReducer","state","headers","BlogCard","props","blog","className","src","_embedded","source_url","alt","title","rendered","author","name","Loading","Header","to","SeoHelmet","description","pathSlug","url","keywords","htmlAttributes","lang","meta","content","links","rel","href","Home","useDispatch","history","useHistory","useSelector","useEffect","useState","setPage","map","index","onClick","blogSlug","push","prevState","disabled","Post","match","params","id","dangerouslySetInnerHTML","__html","NotFound","role","aria-label","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4df49a7.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass BlogService {\n  constructor() {\n    const url = 'https://blog.apiki.com/wp-json/wp/v2';\n    const timeout = 30000;\n\n    this.http = axios.create({\n      baseURL: url,\n      timeout,\n    });\n\n    // Define the  handlers to treat errors and success\n    this.http.interceptors.response.use(this.handleSuccess, this.handleError);\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    throw error;\n  }\n\n  /** Get all blogs by page*/\n  async getBlogsByPage(page) {\n    return this.http.get(`/posts?_embed&categories=518&page=${page}`);\n  }\n\n  /** Get one post by slug*/\n  async getPostBySlug(slug) {\n    return this.http.get(`/posts?_embed&slug=${slug}`);\n  }\n}\n\nexport default new BlogService();\n","import BlogService from '../../services/blogService';\n\n/** Actions Types */\n\nexport const Types = {\n  FIRST_PAGE_FETCHED: 'FIRST_PAGE_FETCHED',\n  POST_FETCHED: 'POST_FETCHED',\n  FETCHING: 'FETCHING',\n  ERROR: 'ERROR',\n  ADDITIONAL_PAGE_FETCHED: 'ADDITIONAL_PAGE_FETCHED',\n};\n\n/** Reducers */\n\nconst initialState = {\n  isFetching: true,\n  blogs: [],\n  totalPages: 0,\n  post: [],\n  errors: [],\n};\n\nconst blogReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case Types.FETCHING:\n      return { ...state, isFetching: payload.status };\n    case Types.FIRST_PAGE_FETCHED:\n      return {\n        ...state,\n        blogs: [...payload.data],\n        totalPages: payload.headers['x-wp-totalpages'],\n      };\n    case Types.ADDITIONAL_PAGE_FETCHED:\n      return { ...state, blogs: [...state.blogs, ...payload] };\n    case Types.POST_FETCHED:\n      return { ...state, post: [...payload] };\n    case Types.ERROR:\n      return {\n        ...state,\n        errors: [...state.errors, payload],\n      };\n    default:\n      return state;\n  }\n};\n\n/** Actions */\n\nexport const salesFetching = (status) => ({\n  type: Types.FETCHING,\n  payload: {\n    status,\n  },\n});\n\nexport const firstPageFetched = (payload) => ({\n  type: Types.FIRST_PAGE_FETCHED,\n  payload,\n});\n\nexport const additionalPageFetched = (payload) => ({\n  type: Types.ADDITIONAL_PAGE_FETCHED,\n  payload,\n});\n\nexport const postFetched = (payload) => ({\n  type: Types.POST_FETCHED,\n  payload,\n});\n\nexport const hasErrored = (error = []) => ({\n  type: Types.ERROR,\n  payload: error,\n});\n\n/** Actions Creators */\n\nexport const getAllBlogs = (page) => (dispatch) => {\n  dispatch(salesFetching(true));\n\n  BlogService.getBlogsByPage(page)\n    .then((response) => {\n      if (page === 1) {\n        // first page will overwrite the blog object in reducer\n        dispatch(firstPageFetched(response));\n        dispatch(salesFetching(false));\n      } else {\n        // others page will add news pages to the blog object in reducer\n        dispatch(additionalPageFetched(response.data));\n        dispatch(salesFetching(false));\n      }\n    })\n    .catch((error) => dispatch(hasErrored(error)));\n};\n\nexport const getOnePost = (slug) => (dispatch) => {\n  dispatch(salesFetching(true));\n  BlogService.getPostBySlug(slug).then((response) => {\n    dispatch(postFetched(response.data));\n    dispatch(salesFetching(false));\n  });\n};\n\nexport default blogReducer;\n","import React from 'react';\nimport './index.css';\n\nconst BlogCard = (props) => {\n\n  const { blog } = props;\n\n  return (\n    <article >\n      <div className=\"card__container flex\">\n        <img className=\"card__img\" src={`${blog._embedded['wp:featuredmedia']['0'].source_url}`}\n          alt={blog.title.rendered} ></img>\n        <div className=\"card__content flex\">\n          <div className=\"card__title\">{blog.title.rendered}</div>\n          <div className=\"card__author__container flex\">\n            <div className=\"card__author__by\">By</div>\n            <div className=\"card__author__name\">\n              {blog._embedded.author[0].name}\n            </div>\n          </div>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default BlogCard;\n","import React from 'react';\nimport './index.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loader__container flex\">\n      <div className=\"loader\"></div>\n    </div>\n  )\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo_container flex\">\n        {/* this full Link block send to the home page */}\n        <Link to={'/'}>  \n          <img\n            className=\"header__logo-img\"\n            src=\"https://blog.apiki.com/wp-content/uploads/sites/2/2020/04/marca-apiki-blog-h552.png\"\n            alt=\"apiki logo\"\n          ></img>\n        </Link>\n      </div >\n    </div >\n  );\n};\n\nexport default Header;\n","import { Helmet } from 'react-helmet-async';\nimport React from 'react';\n\nconst SeoHelmet = ({ title, description, pathSlug, keywords }) => {\n\n  const url = `http://localhost:3000/#/${pathSlug}` //MUST be adapt to the Url where the app is deployed\n\n  return (\n    <Helmet htmlAttributes={{ lang: 'pt-br' }} title={title} meta={[\n      {\n        name: 'description',\n        content: description,\n      },\n      // {\n      //   name: 'keywords',\n      //   content: keywords.join(),\n      // },\n    ]}\n      links={[\n        {\n          rel: 'canonical',\n          href: url,\n        },\n      ]}\n    />\n  );\n}\nexport default SeoHelmet;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBlogs } from '../../store/ducks/blog';\nimport { useHistory } from 'react-router-dom';\nimport BlogCard from '../../components/blogCard/BlogCard';\nimport Loading from '../../components/Loading/Loading';\nimport Header from '../../components/Header/Header';\nimport SeoHelmet from '../../components/SeoHelmet/SeoHelmet';\nimport './index.css';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Getting the list of all post from the reducer\n  const { blogs, isFetching, totalPages } = useSelector(\n    (state) => state.blogReducer,\n  );\n\n  // when loading page, the API is fetched to return the first page\n  useEffect(() => {\n    dispatch(getAllBlogs(1));\n  }, [dispatch]);\n\n  //this set the current API page fetched\n  const [page, setPage] = useState(1);\n\n  const handleRedirect = (blogSlug) => history.push(`/post/${blogSlug}`);\n\n  const handelClick = () => {\n    dispatch(getAllBlogs(2));\n    setPage((prevState) => prevState + 1);\n  };\n\n  if (isFetching) return <Loading />;\n\n  return (\n    <div>\n      <SeoHelmet\n        title={'Blog ApiKi Desenvolvimento WordPress'}\n        description={'Blog de conteúdo sobre WordPress.'}\n      ></SeoHelmet>\n      <Header></Header>\n      <div className=\"home__main\">\n        <div className=\"home__title flex\">\n          <h1>Desenvolvimento WordPress</h1>\n          <h2>Desenvolva seu negócio, desenvolvendo com WordPress. </h2>\n        </div>\n        <div className=\"home__section\">\n          {blogs.map((blog, index) => (\n            <div\n              className=\"home__container\"\n              key={index}\n              onClick={() => handleRedirect(blog.slug)}\n            >\n              <BlogCard blog={blog} />\n            </div>\n          ))}\n          <div className=\"home__container__pages flex\">\n            <p>\n              page {page}/{totalPages}\n            </p>\n            <button\n              onClick={() => handelClick()}\n              disabled={page === totalPages}\n            >\n              Carregar mais...\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOnePost } from '../../store/ducks/blog';\nimport Header from '../../components/Header/Header';\nimport Loading from '../../components/Loading/Loading';\nimport SeoHelmet from '../../components/SeoHelmet/SeoHelmet';\nimport './index.css';\n\nconst Post = (props) => {\n  const dispatch = useDispatch();\n  const slug = props.match.params.id;\n\n  // Getting the full information of the post from the reducer\n  const { post, isFetching } = useSelector((state) => state.blogReducer);\n\n  // when loading page, the API is fetched to return information of the post\n  useEffect(() => {\n    dispatch(getOnePost(slug));\n  }, [dispatch, slug]);\n\n  if (isFetching || typeof post[0] === 'undefined')\n    return <Loading />;\n\n  return (\n    <div>\n      <SeoHelmet title={post[0].title.rendered} pathSlug={slug}></SeoHelmet>\n      <Header></Header>\n      <div className=\"post__section flex\">\n        <div className=\"post__container flex\">\n          <h1 dangerouslySetInnerHTML={{ __html: post[0].title.rendered }}></h1>\n          <img\n            src={`${post[0]._embedded['wp:featuredmedia']['0'].source_url}`}\n            alt={post[0].title.rendered}\n          ></img>\n          <div\n            className=\"post__container__article flex\"\n            dangerouslySetInnerHTML={{ __html: post[0].content.rendered }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\n// import './not-found.css';\n\nconst NotFound = () => (\n  <div className=\"not-found\">    <h2>\n    {`Page requested ` + `not found`}\n    <span role=\"img\" aria-label=\"Crying emoji\"> 😭 </span>\n  </h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Post from './pages/Post';\nimport NotFound from './components/NotFound/NotFound.jsx';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/post/:id\" component={Post} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport blogReducer from './blog';\n\nconst rootReducer = combineReducers({\n  blogReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './ducks/rootReducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HelmetProvider } from 'react-helmet-async'; // instead of helmet to avoid async warning\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <Provider store={store}>\n        <App></App>\n      </Provider>\n    </HelmetProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}